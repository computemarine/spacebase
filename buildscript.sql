-- Generated by Oracle SQL Developer Data Modeler 18.1.0.082.1041
--   at:        2019-04-09 11:51:48 BOT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

DROP TABLE DEPARTMENT CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE CONSULTATION CASCADE CONSTRAINTS;
DROP TABLE CONSULTATIONFEE CASCADE CONSTRAINTS;
DROP TABLE CUSTOMER CASCADE CONSTRAINTS;
DROP TABLE INVOICE CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE INVOICELINE CASCADE CONSTRAINTS;
DROP TABLE SHIPPER CASCADE CONSTRAINTS;
DROP TABLE SHIPPED CASCADE CONSTRAINTS;
DROP TABLE RETURN CASCADE CONSTRAINTS;
DROP TABLE SUPPLIER CASCADE CONSTRAINTS;
DROP TABLE RETURNSUPPLIER CASCADE CONSTRAINTS;
DROP TABLE BANK CASCADE CONSTRAINTS;
DROP TABLE BANKACCOUNT CASCADE CONSTRAINTS;
DROP TABLE SUPPLIEDPART CASCADE CONSTRAINTS;

CREATE TABLE bank (
    bank_id         VARCHAR2(5 BYTE) NOT NULL,
    bank_name       VARCHAR2(25 CHAR),
    bank_location   VARCHAR2(25 CHAR),
    bank_creditor   VARCHAR2(25 CHAR),
    bank_currency   VARCHAR2(25 CHAR)
);

ALTER TABLE bank ADD CONSTRAINT bank_pk PRIMARY KEY ( bank_id );

CREATE TABLE bankaccount (
    bank_acc_num                   VARCHAR2(5 BYTE) NOT NULL,
    bank_bank_id                   VARCHAR2(5 BYTE) NOT NULL,
    bank_account_description       VARCHAR2(25 CHAR),
    bank_account_balance           NUMBER(6,2),
    bank_account_overdraft_limit   NUMBER(6,2)
);

ALTER TABLE bankaccount ADD CONSTRAINT bankaccount_pk PRIMARY KEY ( bank_acc_num );

CREATE TABLE consultation (
    consultation_code                   VARCHAR2(5 BYTE) NOT NULL,
    employee_employee_id                VARCHAR2(5 BYTE) NOT NULL,
    consultation_date                   DATE,
    consultation_status                 VARCHAR2(25 CHAR),  
    consultation_recom_products         VARCHAR2(25 CHAR),
    consultation_restrictions           VARCHAR2(25 CHAR),
    consultation_comments               VARCHAR2(25 CHAR)
);

ALTER TABLE consultation ADD CONSTRAINT consultation_pk PRIMARY KEY ( consultation_code );

CREATE TABLE consultationfee (
    consultation_consultation_code    VARCHAR2(5 BYTE) NOT NULL,
    consultation_fee_date             DATE NOT NULL,
    consultation_fee_amount           NUMBER(6,2),  
    consultation_fee_pay_meth         VARCHAR2(25 CHAR),
    consultation_fee_comments         VARCHAR2(25 CHAR),
    consultation_fee_agreement        VARCHAR2(25 CHAR)
);

ALTER TABLE consultationfee ADD CONSTRAINT consultationfee_pk PRIMARY KEY ( consultation_consultation_code,
                                                                            consultation_fee_date );

CREATE TABLE customer (
    customer_id                      VARCHAR2(5 BYTE) NOT NULL,
    consultation_consultation_code   VARCHAR2(5 BYTE) NOT NULL,
    customer_first_name              VARCHAR2(25 CHAR),
    customer_last_name               VARCHAR2(25 CHAR),
    customer_city                    VARCHAR2(25 CHAR),
    customer_state                   VARCHAR2(25 CHAR),
    customer_zip_code                VARCHAR2(25 CHAR),
    customer_address                 VARCHAR2(25 CHAR),
    customer_phone_number            VARCHAR2(10 BYTE),
    customer_email_address           VARCHAR2(25 CHAR)
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE department (
    department_id            VARCHAR2(5 BYTE) NOT NULL,
    department_name          VARCHAR2(28 CHAR),
    department_location      VARCHAR2(25 CHAR),
    department_contact       VARCHAR2(25 CHAR),
    department_description   VARCHAR2(25 CHAR),
    department_budget        NUMBER(6,2)
);

ALTER TABLE department ADD CONSTRAINT department_pk PRIMARY KEY ( department_id );

CREATE TABLE employee (
    employee_id                VARCHAR2(5 BYTE) NOT NULL,
    department_department_id   VARCHAR2(5 BYTE) NOT NULL,
    employee_first_name        VARCHAR2(25 CHAR),
    employee_last_name         VARCHAR2(25 CHAR),
    employee_hire_date         DATE,
    employee_release_date      DATE,
    employee_birth_date        DATE,
    employee_phone_number      VARCHAR2(10 BYTE),
    employee_email_address     VARCHAR2(25 CHAR),
    employee_salary            NUMBER(6,2),
    employee_position          VARCHAR2(25 CHAR)
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id );

CREATE TABLE invoice (
    invoice_id               VARCHAR2(5 BYTE) NOT NULL,
    customer_customer_id     VARCHAR2(5 BYTE) NOT NULL,
    invoice_date             DATE,
    invoice_amount_due       NUMBER(6,2),
    invoice_amount_paid      NUMBER(6,2),
    invoice_payment_status   VARCHAR2(25 CHAR),
    invoice_billing_info     VARCHAR2(50 CHAR),
    invoice_comments         VARCHAR2(25 CHAR)
);

ALTER TABLE invoice ADD CONSTRAINT invoice_pk PRIMARY KEY ( invoice_id );

CREATE TABLE invoiceline (
    product_product_id            VARCHAR2(5 BYTE) NOT NULL,
    invoice_invoice_id            VARCHAR2(5 BYTE) NOT NULL,
    invoiceline_unitprice         NUMBER(6,2),
    invoiceline_quantity          NUMBER(6,2),
    invoiceline_comments          VARCHAR2(25 CHAR),
    invoiceline_transactiondate   DATE,
    invoiceline_totalprice        NUMBER(6,2),
    invoiceline_subtotal          NUMBER(6,2),
    invoiceline_discount          NUMBER(6,2)
);

ALTER TABLE invoiceline ADD CONSTRAINT invoiceline_pk PRIMARY KEY ( product_product_id,
                                                                    invoice_invoice_id );

CREATE TABLE product (
    product_id               VARCHAR2(5 BYTE) NOT NULL,
    product_description      VARCHAR2(25 CHAR),
    product_unit_price       NUMBER(6,2),
    product_units_stocked    NUMBER(6,2),
    product_units_ordered    NUMBER(6,2),
    product_catalog_number   NUMBER(6,2),
    product_weight           NUMBER(6,2),
    product_stock            NUMBER(6,2),
    product_material         VARCHAR2(25 CHAR)
);

ALTER TABLE product ADD CONSTRAINT product_pk PRIMARY KEY ( product_id );

CREATE TABLE return (
    return_id                        VARCHAR2(5 BYTE) NOT NULL,
    customer_customer_id             VARCHAR2(5 BYTE) NOT NULL,
    invoiceline_product_product_id   VARCHAR2(5 BYTE),
    invoiceline_invoice_invoice_id   VARCHAR2(5 BYTE),
    return_description               VARCHAR2(25 CHAR),
    return_date                      DATE,
    return_condition                 VARCHAR2(25 CHAR),
    return_policy                    VARCHAR2(25 CHAR),
    return_reimbursement             NUMBER(6,2)
);

ALTER TABLE return ADD CONSTRAINT return_pk PRIMARY KEY ( return_id );

CREATE TABLE returnsupplier (
    return_return_id               VARCHAR2(5 BYTE) NOT NULL,
    supplier_supplier_id           VARCHAR2(5 BYTE) NOT NULL,
    return_supplier_date           DATE NOT NULL,
    return_supplier_confirmation   VARCHAR2(25 CHAR),
    return_supplier_restockfee     NUMBER(6,2),
    return_supplier_daystoreturn   DATE
);

ALTER TABLE returnsupplier
    ADD CONSTRAINT returnsupplier_pk PRIMARY KEY ( return_return_id,
                                                   supplier_supplier_id,
                                                   return_supplier_date );

CREATE TABLE shipped (
    shipper_shipper_id               VARCHAR2(5 BYTE) NOT NULL,
    invoiceline_product_product_id   VARCHAR2(5 BYTE) NOT NULL,
    invoiceline_invoice_invoice_id   VARCHAR2(5 BYTE) NOT NULL,
    shipped_date                     DATE NOT NULL,
    shipped_address                  VARCHAR2(25 CHAR),
    shipped_confirmation             VARCHAR2(25 CHAR),
    shipped_catalognumber            NUMBER(6,2),
    shipped_status                   VARCHAR2(25 CHAR),
    shipped_type                     VARCHAR2(25 CHAR),
    shipped_freight                  NUMBER(6,2),
    shipped_weight                   NUMBER(6,2)
);

ALTER TABLE shipped
    ADD CONSTRAINT shipped_pk PRIMARY KEY ( shipper_shipper_id,
                                            invoiceline_product_product_id,
                                            invoiceline_invoice_invoice_id,
                                            shipped_date );

CREATE TABLE shipper (
    shipper_id              VARCHAR2(5 BYTE) NOT NULL,
    shipper_first_name      VARCHAR2(25 CHAR),
    shipper_last_name       VARCHAR2(25 CHAR),
    shipper_hired_date      DATE,
    shipper_release_date    DATE,
    shipper_phone_number    VARCHAR2(10 BYTE),
    shipper_email_address   VARCHAR2(25 CHAR),
    shipper_salary          NUMBER(6,2)
);

ALTER TABLE shipper ADD CONSTRAINT shipper_pk PRIMARY KEY ( shipper_id );

CREATE TABLE suppliedpart (
    supplier_supplier_id              VARCHAR2(5 BYTE) NOT NULL,
    product_product_id                VARCHAR2(5 BYTE) NOT NULL,
    supplied_part_date                DATE NOT NULL,  
    bankaccount_bank_acc_num          VARCHAR2(5 BYTE) NOT NULL,
    supplied_part_quantity            NUMBER(6,2),
    supplied_part_unitsinstock        NUMBER(6,2),
    supplied_parts_catalognumber      NUMBER(6,2),
    supplier_parts_weight             NUMBER(6,2),
    supplied_parts_priceperunit       NUMBER(6,2)
);

ALTER TABLE suppliedpart
    ADD CONSTRAINT suppliedpart_pk PRIMARY KEY ( supplier_supplier_id,
                                                 product_product_id,
                                                 supplied_part_date );

CREATE TABLE supplier (
    supplier_id              VARCHAR2(5 BYTE) NOT NULL,
    supplier_company_name    VARCHAR2(25 CHAR),
    supplier_first_name      VARCHAR2(25 CHAR),
    supplier_last_name       VARCHAR2(25 CHAR),
    supplier_hired_date      DATE,
    supplier_release_date    DATE,
    supplier_phone_number    VARCHAR2(10 BYTE),
    supplier_email_address   VARCHAR2(25 CHAR),
    supplier_salary          NUMBER(6,2)
);

ALTER TABLE supplier ADD CONSTRAINT supplier_pk PRIMARY KEY ( supplier_id );

ALTER TABLE bankaccount
    ADD CONSTRAINT bankaccount_bank_fk FOREIGN KEY ( bank_bank_id )
        REFERENCES bank ( bank_id );

ALTER TABLE consultation
    ADD CONSTRAINT consultation_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE consultationfee
    ADD CONSTRAINT consultationfee_consult_fk FOREIGN KEY ( consultation_consultation_code )
        REFERENCES consultation ( consultation_code );

ALTER TABLE customer
    ADD CONSTRAINT customer_consultation_fk FOREIGN KEY ( consultation_consultation_code )
        REFERENCES consultation ( consultation_code );

ALTER TABLE employee
    ADD CONSTRAINT employee_department_fk FOREIGN KEY ( department_department_id )
        REFERENCES department ( department_id );

ALTER TABLE invoice
    ADD CONSTRAINT invoice_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE invoiceline
    ADD CONSTRAINT invoiceline_invoice_fk FOREIGN KEY ( invoice_invoice_id )
        REFERENCES invoice ( invoice_id );

ALTER TABLE invoiceline
    ADD CONSTRAINT invoiceline_product_fk FOREIGN KEY ( product_product_id )
        REFERENCES product ( product_id );

ALTER TABLE return
    ADD CONSTRAINT return_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE return
    ADD CONSTRAINT return_invoiceline_fk FOREIGN KEY ( invoiceline_product_product_id,
                                                       invoiceline_invoice_invoice_id )
        REFERENCES invoiceline ( product_product_id,
                                 invoice_invoice_id );

ALTER TABLE returnsupplier
    ADD CONSTRAINT returnsupplier_return_fk FOREIGN KEY ( return_return_id )
        REFERENCES return ( return_id );

ALTER TABLE returnsupplier
    ADD CONSTRAINT returnsupplier_supplier_fk FOREIGN KEY ( supplier_supplier_id )
        REFERENCES supplier ( supplier_id );

ALTER TABLE shipped
    ADD CONSTRAINT shipped_invoiceline_fk FOREIGN KEY ( invoiceline_product_product_id,
                                                        invoiceline_invoice_invoice_id )
        REFERENCES invoiceline ( product_product_id,
                                 invoice_invoice_id );

ALTER TABLE shipped
    ADD CONSTRAINT shipped_shipper_fk FOREIGN KEY ( shipper_shipper_id )
        REFERENCES shipper ( shipper_id );

ALTER TABLE suppliedpart
    ADD CONSTRAINT suppliedpart_bankaccount_fk FOREIGN KEY ( bankaccount_bank_acc_num )
        REFERENCES bankaccount ( bank_acc_num );

ALTER TABLE suppliedpart
    ADD CONSTRAINT suppliedpart_product_fk FOREIGN KEY ( product_product_id )
        REFERENCES product ( product_id );

ALTER TABLE suppliedpart
    ADD CONSTRAINT suppliedpart_supplier_fk FOREIGN KEY ( supplier_supplier_id )
        REFERENCES supplier ( supplier_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             0
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
